{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\n\n// Add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials)\n};\n\n// Users API\nexport const usersAPI = {\n  getProfile: () => api.get('/users/profile'),\n  updateProfile: data => api.put('/users/profile', data),\n  searchUsers: params => api.get('/users/search', {\n    params\n  })\n};\n\n// Skills API\nexport const skillsAPI = {\n  getSkills: () => api.get('/skills'),\n  addSkill: skill => api.post('/skills', skill),\n  deleteSkill: id => api.delete(`/skills/${id}`)\n};\n\n// Swaps API\nexport const swapsAPI = {\n  getSwaps: () => api.get('/swaps'),\n  sendSwapRequest: data => api.post('/swaps', data),\n  updateSwapStatus: (id, status) => api.put(`/swaps/${id}`, {\n    status\n  })\n};\n\n// Ratings API\nexport const ratingsAPI = {\n  getUserRatings: userId => api.get(`/ratings/user/${userId}`),\n  addRating: rating => api.post('/ratings', rating)\n};\n\n// Upload API\nexport const uploadAPI = {\n  uploadProfileImage: formData => api.post('/upload/profile-image', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","authAPI","register","userData","post","login","credentials","usersAPI","getProfile","get","updateProfile","data","put","searchUsers","params","skillsAPI","getSkills","addSkill","skill","deleteSkill","id","delete","swapsAPI","getSwaps","sendSwapRequest","updateSwapStatus","status","ratingsAPI","getUserRatings","userId","addRating","rating","uploadAPI","uploadProfileImage","formData"],"sources":["/Users/rahulpatel/oddop1/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth API\nexport const authAPI = {\n  register: (userData) => api.post('/auth/register', userData),\n  login: (credentials) => api.post('/auth/login', credentials),\n};\n\n// Users API\nexport const usersAPI = {\n  getProfile: () => api.get('/users/profile'),\n  updateProfile: (data) => api.put('/users/profile', data),\n  searchUsers: (params) => api.get('/users/search', { params }),\n};\n\n// Skills API\nexport const skillsAPI = {\n  getSkills: () => api.get('/skills'),\n  addSkill: (skill) => api.post('/skills', skill),\n  deleteSkill: (id) => api.delete(`/skills/${id}`),\n};\n\n// Swaps API\nexport const swapsAPI = {\n  getSwaps: () => api.get('/swaps'),\n  sendSwapRequest: (data) => api.post('/swaps', data),\n  updateSwapStatus: (id, status) => api.put(`/swaps/${id}`, { status }),\n};\n\n// Ratings API\nexport const ratingsAPI = {\n  getUserRatings: (userId) => api.get(`/ratings/user/${userId}`),\n  addRating: (rating) => api.post('/ratings', rating),\n};\n\n// Upload API\nexport const uploadAPI = {\n  uploadProfileImage: (formData) => api.post('/upload/profile-image', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  }),\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN;AACX,CAAC,CAAC;;AAEF;AACAI,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMM,OAAO,GAAG;EACrBC,QAAQ,EAAGC,QAAQ,IAAKd,GAAG,CAACe,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;EAC5DE,KAAK,EAAGC,WAAW,IAAKjB,GAAG,CAACe,IAAI,CAAC,aAAa,EAAEE,WAAW;AAC7D,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG;EACtBC,UAAU,EAAEA,CAAA,KAAMnB,GAAG,CAACoB,GAAG,CAAC,gBAAgB,CAAC;EAC3CC,aAAa,EAAGC,IAAI,IAAKtB,GAAG,CAACuB,GAAG,CAAC,gBAAgB,EAAED,IAAI,CAAC;EACxDE,WAAW,EAAGC,MAAM,IAAKzB,GAAG,CAACoB,GAAG,CAAC,eAAe,EAAE;IAAEK;EAAO,CAAC;AAC9D,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG;EACvBC,SAAS,EAAEA,CAAA,KAAM3B,GAAG,CAACoB,GAAG,CAAC,SAAS,CAAC;EACnCQ,QAAQ,EAAGC,KAAK,IAAK7B,GAAG,CAACe,IAAI,CAAC,SAAS,EAAEc,KAAK,CAAC;EAC/CC,WAAW,EAAGC,EAAE,IAAK/B,GAAG,CAACgC,MAAM,CAAC,WAAWD,EAAE,EAAE;AACjD,CAAC;;AAED;AACA,OAAO,MAAME,QAAQ,GAAG;EACtBC,QAAQ,EAAEA,CAAA,KAAMlC,GAAG,CAACoB,GAAG,CAAC,QAAQ,CAAC;EACjCe,eAAe,EAAGb,IAAI,IAAKtB,GAAG,CAACe,IAAI,CAAC,QAAQ,EAAEO,IAAI,CAAC;EACnDc,gBAAgB,EAAEA,CAACL,EAAE,EAAEM,MAAM,KAAKrC,GAAG,CAACuB,GAAG,CAAC,UAAUQ,EAAE,EAAE,EAAE;IAAEM;EAAO,CAAC;AACtE,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG;EACxBC,cAAc,EAAGC,MAAM,IAAKxC,GAAG,CAACoB,GAAG,CAAC,iBAAiBoB,MAAM,EAAE,CAAC;EAC9DC,SAAS,EAAGC,MAAM,IAAK1C,GAAG,CAACe,IAAI,CAAC,UAAU,EAAE2B,MAAM;AACpD,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG;EACvBC,kBAAkB,EAAGC,QAAQ,IAAK7C,GAAG,CAACe,IAAI,CAAC,uBAAuB,EAAE8B,QAAQ,EAAE;IAC5EnC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;AACH,CAAC;AAED,eAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}